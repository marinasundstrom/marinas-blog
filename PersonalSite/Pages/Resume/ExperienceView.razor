@using PersonalSite.Models
@using PersonalSite.Markdown

@{
    var experience = Model.experience;

    var now = ExperienceExtensions.GetNowDate();

    var startDate = experience.GetStartDate();
    DateTime? endDate = experience.GetEndDate();
}

@if(Model.isSub) 
{
    <p>
        @experience.EmploymentType

        @if(experience.Consultant) 
        {
            @if(experience.For is not null) 
            {
                <span> with @experience.For</span>
            }
        } 
    </p>
}
else 
{
    <p>
        <b>@experience.Company</b> • @experience.EmploymentType
        
        @if(experience.Consultant) 
        {
            @if(experience.For is not null) 
            {
                <span> with @experience.For</span>
            }
        }
    
    </p>
}

<p class="mt-2 mb-3 text-muted">@startDate.Humanize(endDate) • @startDate.Humanize2(endDate)<br />@experience.Location</p>

    <div class="mb-4">
        <MarkdownView Content="@experience.Description" />
    </div>

    @if(experience.Skills?.Any() ?? false)
    {
        <dl>
            <dt>Key skills</dt>
            <dd>
                @foreach (var skillName in experience.Skills)
                {
                    <div class="badge mini rounded-pill tag me-2 mb-2 text-decoration-none">
                        @skillName
                    </div>
                }
            </dd>
        </dl>
    }

@code {
    [Parameter]
    public bool ShowMore { get; set; }

    [Parameter]
    [EditorRequired]
    public Obj Model { get; set; }

    void ToggleShowMore() 
    {
        ShowMore = !ShowMore;

        StateHasChanged();
    }
}