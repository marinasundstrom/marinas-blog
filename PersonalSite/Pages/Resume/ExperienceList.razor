@using PersonalSite.Models

@foreach (var group in Groups)
{
    var (company, experiences) = group;

    if (experiences.Count() == 1)
    {
        var experience = experiences.First();

        <div style="page-break-inside: avoid;">
            <div class="d-flex">
                <div class="col-logo">
                    <Logo Src="@experience.CompanyLogo" Alt="@($"{experience.Company} logo")" Class="ms-md-3 me-md-4"
                        Href="@experience.Link" />
                </div>

                <div class="flex-grow-1">
                    <div class="mb-4 pb-md-1 me-md-4" style="margin-top: 30px !important;">
                        <h4 class="mt-3">@experience.Title</h4>

                        <ExperienceView Model="@Foo(experience, false)" />
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        var lastExperience = experiences.First();
        var firstExperience = experiences.Last();

        <div style="break-inside: avoid-page;">
    <div class="d-flex">
        <div class="col-logo">
            <Logo Src="@firstExperience.CompanyLogo" Alt="@($"{firstExperience.Company} logo")" Class="ms-md-3 me-md-4"
                Href="@firstExperience.Link" />
        </div>

        <div class="flex-grow-1 me-md-4 pb-md-1">
            <h3 style="margin-top: 32px !important;">@firstExperience.Company</h3>

            <p class="text-muted mb-5">
                @firstExperience.GetStartDate().Humanize2(lastExperience.GetEndDate())</p>

            <ol class="timeline mt-5">
                @foreach (var experience in experiences
                       .OrderByDescending(x => x.StartDate)
                       .ThenByDescending(x => x.EndDate))
                        {
                            <li>
                                <div class="mb-5 pt-1">
                                    <h4 style="margin-top: -6px !important;">@experience.Title
                                        @if (experience.Consultant)
                                        {
                                            <span> Consultant</span>
                                        }
                                    </h4>

                                    <ExperienceView Model="@Foo(experience, true)" />
                                </div>
                            </li>
                        }
                    </ol>
                </div>
            </div>
        </div>
    }
}

@code {
    [Parameter]
    [EditorRequired]
    public IEnumerable<IGrouping<string, Experience>> Groups { get; set; } = null!;

    public Obj Foo(Experience experience, bool isSub)
    {
        return new Obj(experience, isSub);
    }
}