@page "/"
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@layout CoverLayout
@using System.Globalization
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting

<PageTitle>Marina SundstrÃ¶m</PageTitle>

<div class="bgimg-1">

    <div class="text-center w-100 text-light caption" style="text-shadow: 0 .05rem .1rem rgba(0, 0, 0, .5); position: relative;
            z-index: 1; /* Ensures text stays above the overlay */">

        <img class="rounded-circle pulse"
            style="height: 200px; margin-bottom: 25px; border: 5px solid var(--brand-color);"
            src="/images/profile.jpeg" />
        <h1>Hi! I'm Marina ðŸ˜Š</h1>
        <p class="lead">I'm a Software Developer.</p>
        <p class="lead">
            <a href="#who-am-i" class="mt-4 custom btn btn-lg btn-secondary fw-bold">About me</a>
        </p>

        <br />
        <br />
        <br />

    </div>

</div>

<section id="who-am-i" class="context" style="padding-top: 55px !important; padding:50px 15px;text-align: start;">
    <div class="container">
        <div class="col mx-auto mt-4" style="max-width: 640px">
            <h3 style="text-align:center;">Who am I?</h3>
            <p>I'm a software developer based in MalmÃ¶, Sweden.</p>

            <p>I specialize in C#/.NET and Web development, crafting software thatâ€™s not just functional but delightful
                to use.</p>

            <p>Beyond coding, youâ€™ll find me exploring beautiful nature on long walks, pondering life over a great cup
                of coffee, or experimenting with new cocktail recipes.</p>

            <div class="d-flex justify-content-center">
                <p><a class="btn btn-primary text-center mt-4" href="/presentation">Read more</a></p>
            </div>
        </div>

    </div>
</section>

@code {
    private bool _redirected = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await NavigationManager.NavigateToFragmentAsync(JS);
        }

        if (firstRender && !_redirected)
        {
            var uri = new Uri(NavigationManager.Uri);
            var queryParams = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);

            if (queryParams.TryGetValue("p", out var target))
            {
                var safeTarget = target.ToString();

                if (!string.IsNullOrWhiteSpace(safeTarget) && !IsCurrentPage(safeTarget))
                {
                    _redirected = true;
                    NavigationManager.NavigateTo(safeTarget, forceLoad: false);
                }
            }
        }
    }

    private bool IsCurrentPage(string target)
    {
        var currentUri = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        return string.Equals(currentUri, target.TrimStart('/'), StringComparison.OrdinalIgnoreCase);
    }
}